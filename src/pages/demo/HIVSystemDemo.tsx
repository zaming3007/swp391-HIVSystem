import React, { useState } from 'react';
import {
    Container,
    Typography,
    Card,
    CardContent,
    Grid,
    Box,
    Tabs,
    Tab,
    Button,
    Alert,
    Divider,
    List,
    ListItem,
    ListItemIcon,
    ListItemText,
    Chip
} from '@mui/material';
import {
    Person as PersonIcon,
    LocalHospital as DoctorIcon,
    Science as TestIcon,
    Medication as ARVIcon,
    CheckCircle as CheckIcon,
    Star as StarIcon,
    Medication as MedicationIcon
} from '@mui/icons-material';
import TestResults from '../customer/TestResults';
import ARVManagement from '../customer/ARVManagement';
import PatientTestResults from '../doctor/PatientTestResults';
import ARVWorkflowDemo from './ARVWorkflowDemo';

const HIVSystemDemo: React.FC = () => {
    const [tabValue, setTabValue] = useState(0);

    const handleTabChange = (event: React.SyntheticEvent, newValue: number) => {
        setTabValue(newValue);
    };

    const features = [
        {
            title: 'Xem k·∫øt qu·∫£ x√©t nghi·ªám',
            description: 'B·ªánh nh√¢n c√≥ th·ªÉ xem CD4, viral load v√† c√°c x√©t nghi·ªám kh√°c',
            icon: <TestIcon color="primary" />
        },
        {
            title: 'Qu·∫£n l√Ω ph√°c ƒë·ªì ARV',
            description: 'Theo d√µi ph√°c ƒë·ªì ƒëi·ªÅu tr·ªã hi·ªán t·∫°i v√† l·ªãch s·ª≠ ƒëi·ªÅu tr·ªã',
            icon: <ARVIcon color="secondary" />
        },
        {
            title: 'Ghi nh·∫≠n tu√¢n th·ªß ƒëi·ªÅu tr·ªã',
            description: 'B·ªánh nh√¢n t·ª± ghi nh·∫≠n vi·ªác u·ªëng thu·ªëc h√†ng ng√†y',
            icon: <CheckIcon color="success" />
        },
        {
            title: 'Qu·∫£n l√Ω b·ªánh nh√¢n cho b√°c sƒ©',
            description: 'B√°c sƒ© c√≥ th·ªÉ k√™ ƒë∆°n, theo d√µi v√† c·∫≠p nh·∫≠t k·∫øt qu·∫£',
            icon: <DoctorIcon color="info" />
        }
    ];

    return (
        <Container maxWidth="lg" sx={{ mt: 4, mb: 4 }}>
            <Box sx={{ textAlign: 'center', mb: 4 }}>
                <Typography variant="h3" component="h1" gutterBottom>
                    üè• HIV Healthcare System Demo
                </Typography>
                <Typography variant="h6" color="text.secondary" paragraph>
                    H·ªá th·ªëng qu·∫£n l√Ω ƒëi·ªÅu tr·ªã HIV to√†n di·ªán cho b·ªánh nh√¢n v√† b√°c sƒ©
                </Typography>

                <Alert severity="info" sx={{ mt: 3, mb: 3 }}>
                    <Typography variant="body1" fontWeight="medium">
                        üöÄ Demo Features: Test Results Management & ARV Treatment Tracking
                    </Typography>
                    <Typography variant="body2">
                        ƒê√¢y l√† demo 2 ch·ª©c nƒÉng ch√≠nh: Qu·∫£n l√Ω k·∫øt qu·∫£ x√©t nghi·ªám v√† Theo d√µi ph√°c ƒë·ªì ARV
                    </Typography>
                </Alert>
            </Box>

            {/* Features Overview */}
            <Card sx={{ mb: 4 }}>
                <CardContent>
                    <Typography variant="h5" gutterBottom>
                        ‚ú® T√≠nh nƒÉng ch√≠nh
                    </Typography>
                    <Grid container spacing={3}>
                        {features.map((feature, index) => (
                            <Grid item xs={12} md={6} key={index}>
                                <Box sx={{ display: 'flex', alignItems: 'flex-start' }}>
                                    <Box sx={{ mr: 2, mt: 0.5 }}>
                                        {feature.icon}
                                    </Box>
                                    <Box>
                                        <Typography variant="h6" gutterBottom>
                                            {feature.title}
                                        </Typography>
                                        <Typography variant="body2" color="text.secondary">
                                            {feature.description}
                                        </Typography>
                                    </Box>
                                </Box>
                            </Grid>
                        ))}
                    </Grid>
                </CardContent>
            </Card>

            {/* Demo Tabs */}
            <Card>
                <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>
                    <Tabs value={tabValue} onChange={handleTabChange} variant="fullWidth">
                        <Tab
                            icon={<PersonIcon />}
                            label="Giao di·ªán B·ªánh nh√¢n - K·∫øt qu·∫£ x√©t nghi·ªám"
                            iconPosition="start"
                        />
                        <Tab
                            icon={<ARVIcon />}
                            label="Giao di·ªán B·ªánh nh√¢n - Qu·∫£n l√Ω ARV"
                            iconPosition="start"
                        />
                        <Tab
                            icon={<DoctorIcon />}
                            label="Giao di·ªán B√°c sƒ© - Qu·∫£n l√Ω b·ªánh nh√¢n"
                            iconPosition="start"
                        />
                        <Tab
                            icon={<MedicationIcon />}
                            label="üîÑ ARV Workflow Demo"
                            iconPosition="start"
                        />
                    </Tabs>
                </Box>

                <CardContent>
                    {/* Customer Test Results */}
                    {tabValue === 0 && (
                        <Box>
                            <Alert severity="success" sx={{ mb: 3 }}>
                                <Typography variant="body1" fontWeight="medium">
                                    üë§ Giao di·ªán B·ªánh nh√¢n - Xem k·∫øt qu·∫£ x√©t nghi·ªám
                                </Typography>
                                <Typography variant="body2">
                                    B·ªánh nh√¢n c√≥ th·ªÉ xem CD4 count, viral load v√† c√°c x√©t nghi·ªám kh√°c m·ªôt c√°ch d·ªÖ hi·ªÉu
                                </Typography>
                            </Alert>
                            <TestResults />
                        </Box>
                    )}

                    {/* Customer ARV Management */}
                    {tabValue === 1 && (
                        <Box>
                            <Alert severity="info" sx={{ mb: 3 }}>
                                <Typography variant="body1" fontWeight="medium">
                                    üíä Giao di·ªán B·ªánh nh√¢n - Qu·∫£n l√Ω ph√°c ƒë·ªì ARV
                                </Typography>
                                <Typography variant="body2">
                                    B·ªánh nh√¢n c√≥ th·ªÉ xem ph√°c ƒë·ªì hi·ªán t·∫°i, l·ªãch s·ª≠ ƒëi·ªÅu tr·ªã v√† ghi nh·∫≠n tu√¢n th·ªß
                                </Typography>
                            </Alert>
                            <ARVManagement />
                        </Box>
                    )}

                    {/* Doctor Interface */}
                    {tabValue === 2 && (
                        <Box>
                            <Alert severity="warning" sx={{ mb: 3 }}>
                                <Typography variant="body1" fontWeight="medium">
                                    üë®‚Äç‚öïÔ∏è Giao di·ªán B√°c sƒ© - Qu·∫£n l√Ω k·∫øt qu·∫£ x√©t nghi·ªám b·ªánh nh√¢n
                                </Typography>
                                <Typography variant="body2">
                                    B√°c sƒ© c√≥ th·ªÉ xem, th√™m v√† c·∫≠p nh·∫≠t k·∫øt qu·∫£ x√©t nghi·ªám cho b·ªánh nh√¢n
                                </Typography>
                            </Alert>
                            <PatientTestResults
                                patientId="customer-001"
                                patientName="Nguy·ªÖn VƒÉn A"
                            />
                        </Box>
                    )}

                    {/* ARV Workflow Demo */}
                    {tabValue === 3 && (
                        <Box>
                            <Alert severity="success" sx={{ mb: 3 }}>
                                <Typography variant="body1" fontWeight="medium">
                                    üîÑ ARV Workflow Demo - T∆∞∆°ng t√°c B√°c sƒ© - B·ªánh nh√¢n
                                </Typography>
                                <Typography variant="body2">
                                    Demo quy tr√¨nh t∆∞∆°ng t√°c ho√†n ch·ªânh gi·ªØa b√°c sƒ© v√† b·ªánh nh√¢n th√¥ng qua qu·∫£n l√Ω ARV
                                </Typography>
                            </Alert>
                            <ARVWorkflowDemo />
                        </Box>
                    )}
                </CardContent>
            </Card>

            {/* Technical Implementation */}
            <Card sx={{ mt: 4 }}>
                <CardContent>
                    <Typography variant="h5" gutterBottom>
                        üîß Tri·ªÉn khai k·ªπ thu·∫≠t
                    </Typography>

                    <Grid container spacing={3}>
                        <Grid item xs={12} md={6}>
                            <Typography variant="h6" gutterBottom>
                                Backend (.NET 8.0 Web API)
                            </Typography>
                            <List dense>
                                <ListItem>
                                    <ListItemIcon><CheckIcon color="success" /></ListItemIcon>
                                    <ListItemText primary="TestResultsController - Qu·∫£n l√Ω k·∫øt qu·∫£ x√©t nghi·ªám" />
                                </ListItem>
                                <ListItem>
                                    <ListItemIcon><CheckIcon color="success" /></ListItemIcon>
                                    <ListItemText primary="PatientARVController - Qu·∫£n l√Ω ph√°c ƒë·ªì ARV" />
                                </ListItem>
                                <ListItem>
                                    <ListItemIcon><CheckIcon color="success" /></ListItemIcon>
                                    <ListItemText primary="PostgreSQL Database v·ªõi b·∫£ng TestResults" />
                                </ListItem>
                                <ListItem>
                                    <ListItemIcon><CheckIcon color="success" /></ListItemIcon>
                                    <ListItemText primary="Entity Framework Core ORM" />
                                </ListItem>
                            </List>
                        </Grid>

                        <Grid item xs={12} md={6}>
                            <Typography variant="h6" gutterBottom>
                                Frontend (React + Material-UI)
                            </Typography>
                            <List dense>
                                <ListItem>
                                    <ListItemIcon><CheckIcon color="success" /></ListItemIcon>
                                    <ListItemText primary="TestResults.tsx - Giao di·ªán b·ªánh nh√¢n" />
                                </ListItem>
                                <ListItem>
                                    <ListItemIcon><CheckIcon color="success" /></ListItemIcon>
                                    <ListItemText primary="ARVManagement.tsx - Qu·∫£n l√Ω ph√°c ƒë·ªì" />
                                </ListItem>
                                <ListItem>
                                    <ListItemIcon><CheckIcon color="success" /></ListItemIcon>
                                    <ListItemText primary="PatientTestResults.tsx - Giao di·ªán b√°c sƒ©" />
                                </ListItem>
                                <ListItem>
                                    <ListItemIcon><CheckIcon color="success" /></ListItemIcon>
                                    <ListItemText primary="TypeScript Services v·ªõi API integration" />
                                </ListItem>
                            </List>
                        </Grid>
                    </Grid>

                    <Divider sx={{ my: 3 }} />

                    <Typography variant="h6" gutterBottom>
                        üìä D·ªØ li·ªáu Demo
                    </Typography>
                    <Grid container spacing={2}>
                        <Grid item>
                            <Chip label="CD4 Count: 450 cells/ŒºL" color="warning" />
                        </Grid>
                        <Grid item>
                            <Chip label="Viral Load: Undetectable" color="success" />
                        </Grid>
                        <Grid item>
                            <Chip label="Ph√°c ƒë·ªì: TDF/3TC/EFV" color="primary" />
                        </Grid>
                        <Grid item>
                            <Chip label="Tu√¢n th·ªß: 96.67%" color="success" />
                        </Grid>
                    </Grid>

                    <Box sx={{ mt: 3 }}>
                        <Typography variant="body2" color="text.secondary">
                            üí° <strong>L∆∞u √Ω:</strong> ƒê√¢y l√† demo v·ªõi d·ªØ li·ªáu m·∫´u. Trong th·ª±c t·∫ø, d·ªØ li·ªáu s·∫Ω ƒë∆∞·ª£c l·∫•y t·ª´ database PostgreSQL
                            th√¥ng qua c√°c API endpoints ƒë√£ ƒë∆∞·ª£c tri·ªÉn khai.
                        </Typography>
                    </Box>
                </CardContent>
            </Card>
        </Container>
    );
};

export default HIVSystemDemo;
